// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`object fields additionalProperties 1`] = `
<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="chakra-form-control css-1w4uldl"
    role="group"
  >
    <div
      className="chakra-stack css-ztdhv2"
    >
      <div
        className="css-h82jag"
      >
        <div
          className="chakra-form-control css-1w4uldl"
          role="group"
        >
          <label
            className="chakra-form__label css-1hbfay1"
            htmlFor="root_foo"
            id="field-8-label"
          >
            foo
          </label>
          <input
            autoFocus={false}
            className="chakra-input form-control css-0"
            disabled={false}
            formContext={Object {}}
            id="field-8"
            label="foo"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            placeholder=""
            readOnly={false}
            registry={
              Object {
                "ArrayFieldTemplate": [Function],
                "FieldTemplate": [Function],
                "ObjectFieldTemplate": [Function],
                "definitions": Object {},
                "fields": Object {
                  "AnyOfField": [Function],
                  "ArrayField": [Function],
                  "BooleanField": [Function],
                  "DescriptionField": [Function],
                  "NullField": [Function],
                  "NumberField": [Function],
                  "ObjectField": [Function],
                  "OneOfField": [Function],
                  "SchemaField": [Function],
                  "StringField": [Function],
                  "TitleField": [Function],
                  "UnsupportedField": [Function],
                },
                "formContext": Object {},
                "rootSchema": Object {
                  "additionalProperties": true,
                  "type": "object",
                },
                "widgets": Object {
                  "AltDateTimeWidget": [Function],
                  "AltDateWidget": [Function],
                  "BaseInput": [Function],
                  "CheckboxWidget": [Function],
                  "CheckboxesWidget": [Function],
                  "ColorWidget": [Function],
                  "DateTimeWidget": [Function],
                  "DateWidget": [Function],
                  "EmailWidget": [Function],
                  "FileWidget": [Function],
                  "HiddenWidget": [Function],
                  "PasswordWidget": [Function],
                  "RadioWidget": [Function],
                  "RangeWidget": [Function],
                  "SelectWidget": [Function],
                  "TextWidget": [Function],
                  "TextareaWidget": [Function],
                  "URLWidget": [Function],
                  "UpDownWidget": [Function],
                  "radio": [Function],
                  "select": [Function],
                },
              }
            }
            required={false}
            type="text"
            uiSchema={
              Object {
                "classNames": undefined,
              }
            }
            value="foo"
          />
        </div>
      </div>
    </div>
  </div>
  <div>
    <button
      className="btn btn-info"
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;

exports[`object fields object 1`] = `
<form
  className="rjsf"
  noValidate={false}
  onSubmit={[Function]}
>
  <div
    className="chakra-form-control css-1w4uldl"
    role="group"
  >
    <div
      className="chakra-stack css-ztdhv2"
    >
      <div
        className="css-h82jag"
      >
        <div
          className="chakra-form-control css-1w4uldl"
          role="group"
        >
          <label
            className="chakra-form__label css-1hbfay1"
            htmlFor="root_a"
            id="field-1-label"
          >
            a
          </label>
          <input
            autoFocus={false}
            className="chakra-input form-control css-0"
            disabled={false}
            formContext={Object {}}
            id="field-1"
            label="a"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            placeholder=""
            readOnly={false}
            registry={
              Object {
                "ArrayFieldTemplate": [Function],
                "FieldTemplate": [Function],
                "ObjectFieldTemplate": [Function],
                "definitions": Object {},
                "fields": Object {
                  "AnyOfField": [Function],
                  "ArrayField": [Function],
                  "BooleanField": [Function],
                  "DescriptionField": [Function],
                  "NullField": [Function],
                  "NumberField": [Function],
                  "ObjectField": [Function],
                  "OneOfField": [Function],
                  "SchemaField": [Function],
                  "StringField": [Function],
                  "TitleField": [Function],
                  "UnsupportedField": [Function],
                },
                "formContext": Object {},
                "rootSchema": Object {
                  "properties": Object {
                    "a": Object {
                      "type": "string",
                    },
                    "b": Object {
                      "type": "number",
                    },
                  },
                  "type": "object",
                },
                "widgets": Object {
                  "AltDateTimeWidget": [Function],
                  "AltDateWidget": [Function],
                  "BaseInput": [Function],
                  "CheckboxWidget": [Function],
                  "CheckboxesWidget": [Function],
                  "ColorWidget": [Function],
                  "DateTimeWidget": [Function],
                  "DateWidget": [Function],
                  "EmailWidget": [Function],
                  "FileWidget": [Function],
                  "HiddenWidget": [Function],
                  "PasswordWidget": [Function],
                  "RadioWidget": [Function],
                  "RangeWidget": [Function],
                  "SelectWidget": [Function],
                  "TextWidget": [Function],
                  "TextareaWidget": [Function],
                  "URLWidget": [Function],
                  "UpDownWidget": [Function],
                  "radio": [Function],
                  "select": [Function],
                },
              }
            }
            required={false}
            type="text"
            uiSchema={
              Object {
                "classNames": undefined,
              }
            }
            value=""
          />
        </div>
      </div>
      <div
        className="css-h82jag"
      >
        <div
          className="chakra-form-control css-1w4uldl"
          role="group"
        >
          <label
            className="chakra-form__label css-1hbfay1"
            htmlFor="root_b"
            id="field-2-label"
          >
            b
          </label>
          <input
            autoFocus={false}
            className="chakra-input form-control css-0"
            disabled={false}
            formContext={Object {}}
            id="field-2"
            label="b"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            placeholder=""
            readOnly={false}
            registry={
              Object {
                "ArrayFieldTemplate": [Function],
                "FieldTemplate": [Function],
                "ObjectFieldTemplate": [Function],
                "definitions": Object {},
                "fields": Object {
                  "AnyOfField": [Function],
                  "ArrayField": [Function],
                  "BooleanField": [Function],
                  "DescriptionField": [Function],
                  "NullField": [Function],
                  "NumberField": [Function],
                  "ObjectField": [Function],
                  "OneOfField": [Function],
                  "SchemaField": [Function],
                  "StringField": [Function],
                  "TitleField": [Function],
                  "UnsupportedField": [Function],
                },
                "formContext": Object {},
                "rootSchema": Object {
                  "properties": Object {
                    "a": Object {
                      "type": "string",
                    },
                    "b": Object {
                      "type": "number",
                    },
                  },
                  "type": "object",
                },
                "widgets": Object {
                  "AltDateTimeWidget": [Function],
                  "AltDateWidget": [Function],
                  "BaseInput": [Function],
                  "CheckboxWidget": [Function],
                  "CheckboxesWidget": [Function],
                  "ColorWidget": [Function],
                  "DateTimeWidget": [Function],
                  "DateWidget": [Function],
                  "EmailWidget": [Function],
                  "FileWidget": [Function],
                  "HiddenWidget": [Function],
                  "PasswordWidget": [Function],
                  "RadioWidget": [Function],
                  "RangeWidget": [Function],
                  "SelectWidget": [Function],
                  "TextWidget": [Function],
                  "TextareaWidget": [Function],
                  "URLWidget": [Function],
                  "UpDownWidget": [Function],
                  "radio": [Function],
                  "select": [Function],
                },
              }
            }
            required={false}
            step="any"
            type="number"
            uiSchema={
              Object {
                "classNames": undefined,
              }
            }
            value=""
          />
        </div>
      </div>
    </div>
  </div>
  <div>
    <button
      className="btn btn-info"
      type="submit"
    >
      Submit
    </button>
  </div>
</form>
`;
